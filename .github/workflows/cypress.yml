name: Cypress Tests

on: [push, pull_request]

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Create results directory
        run: mkdir -p cypress/results

      - name: Run Cypress tests
        run: |
          npx cypress run --browser chrome --config video=false --reporter json --reporter-options "output=cypress/results/results.json"
        continue-on-error: true

      - name: Upload Cypress results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-results
          path: cypress/results/results.json

      - name: Manipulate JSON and Send via curl
        run: |
          MANIPULATED_JSON=$(jq '.key = "stats"' cypress/results/results.json)
          curl -X POST -H 'Content-Type: application/json' -d "$MANIPULATED_JSON" $SLACK_WEBHOOK_URL
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack notification
        run: |
          JOB_STATUS=$?
          if [ -f cypress/results/results.json ]; then
            TEST_RESULTS=$(jq -Rs '.' cypress/results/results.json)
          else
            TEST_RESULTS="Nenhum resultado encontrado."
          fi
          if [ "$JOB_STATUS" -eq 0 ]; then
            STATUS_MESSAGE="Os testes do Cypress foram conclu√≠dos com sucesso."
          else
            STATUS_MESSAGE="Os testes do Cypress falharam."
          - name: Send Slack notification - Status
            run: |
              curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"$STATUS_MESSAGE\"
              }" $SLACK_WEBHOOK_URL

          - name: Send Slack notification - Test Results
            run: |
              curl -X POST -H 'Content-type: application/json' --data "{
            \"attachments\": [
              {
                \"text\": \"$TEST_RESULTS\"
              }
            ]
          }" $SLACK_WEBHOOK_URL       
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}